

#define T_C 1047
#define T_CD 1109
#define T_D 1175
#define T_DE 1245
#define T_E 1319
#define T_F 1397
#define T_FG 1480 
#define T_G 1568
#define T_GA 1661
#define T_A 1760
#define T_B 1976



#define T_C 262
#define T_D 294
#define T_E 330
#define T_F 349
#define T_G 392
#define T_A 440
#define T_B 493

const int C = 10;
const int D = 9;
const int E = 8;
const int F = 7;
const int G = 6;
const int A = 5;
const int B = 4;

const int Buzz = 11;

void  setup()
{// try input pullup
  pinMode(C, INPUT);
  pinMode(D, INPUT);
  pinMode(E, INPUT);
  pinMode(F, INPUT);
  pinMode(G, INPUT);
  pinMode(A, INPUT);
  pinMode(B, INPUT);

  digitalWrite(C,HIGH);
  digitalWrite(D,HIGH);
  digitalWrite(E,HIGH);
  digitalWrite(F,HIGH);
  digitalWrite(G,HIGH);
  digitalWrite(A,HIGH);
  digitalWrite(B,HIGH);

}

void loop()
{
  while(digitalRead(C)  == LOW) tone(Buzz,T_C);
  while(digitalRead(D) == LOW)  tone(Buzz,T_D);
  while(digitalRead(D) == LOW)  tone(Buzz,T_E);
  while(digitalRead(D) == LOW)  tone(Buzz,T_F);
  while(digitalRead(D) == LOW)  tone(Buzz,T_G);
  while(digitalRead(D) == LOW)  tone(Buzz,T_A);
  while(digitalRead(D) == LOW)  tone(Buzz,T_B);

  noTone(Buzz);

}
















#include "pitches.h"

#define SPEAKER_PIN 8

const uint8_t buttonPins[] = { 12, 11, 10, 9, 7, 6, 5, 4 };
const int buttonTones[] = {
  NOTE_C4, NOTE_D4, NOTE_E4, NOTE_F4,
  NOTE_G4, NOTE_A4, NOTE_B4, NOTE_C5
};
const int numTones = sizeof(buttonPins) / sizeof(buttonPins[0]);

void setup() {
  for (uint8_t i = 0; i < numTones; i++) {
    pinMode(buttonPins[i], INPUT_PULLUP);
  }
  pinMode(SPEAKER_PIN, OUTPUT);
}

void loop() {
  int pitch = 0;
  for (uint8_t i = 0; i < numTones; i++) {
    if (digitalRead(buttonPins[i]) == LOW) {
      pitch = buttonTones[i];
    }
  }
  if (pitch) {
    tone(SPEAKER_PIN, pitch);
  } else {
    noTone(SPEAKER_PIN);
  }
}







#define NOTE_B0  31 
#define NOTE_C1  33 
#define NOTE_CS1 35 
#define NOTE_D1  37 
#define NOTE_DS1 39 
#define NOTE_E1  41 
#define NOTE_F1  44 
#define NOTE_FS1 46 
#define NOTE_G1  49 
#define NOTE_GS1 52 
#define NOTE_A1  55 
#define NOTE_AS1 58 
#define NOTE_B1  62 
#define NOTE_C2  65 
#define NOTE_CS2 69 
#define NOTE_D2  73 
#define NOTE_DS2 78 
#define NOTE_E2  82 
#define NOTE_F2  87 
#define NOTE_FS2 93 
#define NOTE_G2  98 
#define NOTE_GS2 104 
#define NOTE_A2  110 
#define NOTE_AS2 117 
#define NOTE_B2  123 
#define NOTE_C3  131 
#define NOTE_CS3 139 
#define NOTE_D3  147 
#define NOTE_DS3 156 
#define NOTE_E3  165 
#define NOTE_F3  175 
#define NOTE_FS3 185 
#define NOTE_G3  196 
#define NOTE_GS3 208 
#define NOTE_A3  220 
#define NOTE_AS3 233 
#define NOTE_B3  247 
#define NOTE_C4  262 
#define NOTE_CS4 277 
#define NOTE_D4  294 
#define NOTE_DS4 311 
#define NOTE_E4  330 
#define NOTE_F4  349 
#define NOTE_FS4 370 
#define NOTE_G4  392 
#define NOTE_GS4 415 
#define NOTE_A4  440 
#define NOTE_AS4 466 
#define NOTE_B4  494 
#define NOTE_C5  523 
#define NOTE_CS5 554 
#define NOTE_D5  587 
#define NOTE_DS5 622 
#define NOTE_E5  659 
#define NOTE_F5  698 
#define NOTE_FS5 740 
#define NOTE_G5  784 
#define NOTE_GS5 831 
#define NOTE_A5  880 
#define NOTE_AS5 932 
#define NOTE_B5  988 
#define NOTE_C6  1047 
#define NOTE_CS6 1109 
#define NOTE_D6  1175 
#define NOTE_DS6 1245 
#define NOTE_E6  1319 
#define NOTE_F6  1397 
#define NOTE_FS6 1480 
#define NOTE_G6  1568 
#define NOTE_GS6 1661 
#define NOTE_A6  1760 
#define NOTE_AS6 1865 
#define NOTE_B6  1976 
#define NOTE_C7  2093 
#define NOTE_CS7 2217 
#define NOTE_D7  2349 
#define NOTE_DS7 2489 
#define NOTE_E7  2637 
#define NOTE_F7  2794 
#define NOTE_FS7 2960 
#define NOTE_G7  3136 
#define NOTE_GS7 3322 
#define NOTE_A7  3520 
#define NOTE_AS7 3729 
#define NOTE_B7  3951 
#define NOTE_C8  4186 
#define NOTE_CS8 4435 
#define NOTE_D8  4699 
#define NOTE_DS8 4978 



// tone durration and pin array


https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa3JRM2hSOHlyRjdhdHBKaHdaam1nR3pTZE9Jd3xBQ3Jtc0trRFJrOWFuM2l6dzg3RF9BS3RQTVFLQnV6WFVWeHlaLWFiMmtxV3JHRWV6Tk5CSkNfM2ZiWGFHSWNUNkt0YXlNTWMyc2NlU29kZFpvZlRQem40RnAyc1BsVGVPY24tbENGTXI1eTVoODZwaGtMajJsMA&q=http%3A%2F%2Fwww.tobias-erichsen.de%2Fwp-content%2Fuploads%2F2018%2F12%2FloopMIDISetup_1_0_15_26.zip&v=LZp2r3RUEj4
https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbDFDVkVhMXg5MWRnZ3Y1TldMeng1XzBtVk1mUXxBQ3Jtc0ttS1N3MjNjT2t0cnI3aVJqOTB2R3F0RXRGcXpvYnhlLTRKRDBLeEdWcmFWQjB2VTFnQnFhaTZLUG54U2lCNHJmakotLWY5U2t2WmRYVXRLLWlQc21uM2xkVFo0aGtYV1hDXzVmVWF0bkxfWm5tU3diaw&q=https%3A%2F%2Fprojectgus.github.io%2Fhairless-midiserial%2F&v=LZp2r3RUEj4


